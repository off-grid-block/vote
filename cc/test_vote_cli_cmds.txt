install chaincode ----------------------------------------

peer chaincode install -n votep -v 1.0 -p github.com/chaincode

export CORE_PEER_ADDRESS=peer1.org1.example.com:8051
peer chaincode install -n votep -v 1.0 -p github.com/chaincode

export CORE_PEER_LOCALMSPID=Org2MSP
export PEER0_ORG2_CA=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt
export CORE_PEER_TLS_ROOTCERT_FILE=$PEER0_ORG2_CA
export CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp

export CORE_PEER_ADDRESS=peer0.org2.example.com:9051
peer chaincode install -n votep -v 1.0 -p github.com/chaincode

export CORE_PEER_ADDRESS=peer1.org2.example.com:10051
peer chaincode install -n votep -v 1.0 -p github.com/chaincode

instantiate chaincode ------------------------------------

peer chaincode instantiate -o orderer.example.com:7050 --tls --cafile $ORDERER_CA -C mychannel -n votep -v 1.0 -c '{"Args":["init"]}' -P "OR('Org1MSP.member','Org2MSP.member')" --collections-config  $GOPATH/src/github.com/chaincode/collections_config.json


initVote() -----------------------------------------------

export CORE_PEER_ADDRESS=peer0.org1.example.com:7051
export CORE_PEER_LOCALMSPID=Org1MSP
export CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt
export CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp
export PEER0_ORG1_CA=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt

export VOTE=$(echo -n "{\"pollID\":\"pollid1\",\"voterID\":\"voterid1\",\"voterSex\":\"m\",\"voterAge\":21,\"salt\":\"1234\",\"voteHash\":\"hash1\"}" | base64 | tr -d \\n)
peer chaincode invoke -o orderer.example.com:7050 --tls --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem -C mychannel -n votep -c '{"Args":["initVote"]}'  --transient "{\"vote\":\"$VOTE\"}"


getVote() ------------------------------------------------

peer chaincode query -C mychannel -n votep -c '{"Args":["getVote","pollid1voterid1"]}'

getVotePrivateDetails() ----------------------------------

peer chaincode query -C mychannel -n votep -c '{"Args":["getVotePrivateDetails","pollid1voterid11234"]}'

getVotePrivateDetails() ----------------------------------

peer chaincode query -C mychannel -n votep -c '{"Args":["getVotePrivateDetails","pollid1voterid11234"]}'